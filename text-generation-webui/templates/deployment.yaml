apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "oobabooga.fullname" . }}
  labels:
    {{- include "oobabooga.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "oobabooga.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "oobabooga.labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "oobabooga.serviceAccountName" . }}

      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      {{- if .Values.cuda.enabled }}
      runtimeClassName: {{ .Values.cuda.runtimeClassName }}
      {{- end }}
  {{- if .Values.persistence.enabled }}
      initContainers:
        - name: storage-init
          image:  "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          command: [ 'sh', '-c', "if [ ! -f /init/settings.yaml ]; then cp /app/settings-template.yaml /init/settings.yaml; fi" ]
          volumeMounts:
            - mountPath: '/init/'
              name: storage
  {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}

          ports:
            - name: webui
              containerPort: {{ .Values.service.webUiPort }}
              protocol: TCP
            - name: api
              containerPort: {{ .Values.service.apiPort }}
              protocol: TCP


      {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
      {{- end }}
      {{- if .Values.livenessProbe.enabled }}
          readinessProbe:
          {{- toYaml .Values.readinessProbe | nindent 12 }}
      {{- end }}
          env:
            - name: EXTRA_LAUNCH_ARGS
              valueFrom:
                configMapKeyRef:
                  name: config
                  key: CMD_FLAGS


            {{- with .Values.extraEnvVars }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
            {{- if .Values.cuda.enabled }}
            - name: NVIDIA_VISIBLE_DEVICES
              value: {{ .Values.cuda.visibleDevices | quote}}
            - name: NVIDIA_DRIVER_CAPABILITIES
              value: {{ .Values.cuda.capabilities | quote }}
            - name: TORCH_CUDA_ARCH_LIST
              value: {{ .Values.cuda.torchCudaArchList | quote }}
            - name: APP_RUNTIME_GID
              value: {{ .Values.cuda.appRuntimeGID | quote }}

            {{- end }}

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          volumeMounts:
            - mountPath: app/CMD_FLAGS.txt
              name: config-data
              subPath: CMD_FLAGS
              readOnly: true
              type: File
          {{- if .Values.gradioAuth.enabled }}
            - mountPath: /app/.creds
              name: creds
              readOnly: true
              subPath: creds
            {{- end }}
          {{- if .Values.tls.enabled }}
            - mountPath: /app/ssl/
              name: cert
              readOnly: true
            {{- end }}
            - mountPath: /app/models/
              name: storage
              subPath: models
            - mountPath: /app/characters/
              name: storage
              subPath: characters
            - mountPath: /app/.cache/
              name: storage
              subPath: cache
            - mountPath: /app/extensions/
              name: storage
              subPath: extensions
      {{- if .Values.persistence.enabled }}
            - mountPath: /app/settings.yaml
              name: storage
              subPath: settings.yaml
      {{- end }}

      volumes:
        - name: config-data
          configMap:
            name: config
            items:
              - key: CMD_FLAGS
                path: CMD_FLAGS

  {{- if .Values.tls.enabled }}
        - name: cert
          secret:
            secretName: {{ .Values.tls.secretName }}
        {{- end }}
      {{- if .Values.gradioAuth.enabled }}
        - name: creds
          secret:
            secretName: {{ .Values.gradioAuth.secretName }}
      {{- end }}
      {{- if .Values.persistence.enabled }}
        {{- if .Values.persistence.existingClaim }}
        - name: storage
          persistentVolumeClaim:
            claimName: {{ .Values.persistence.existingClaim }}
        {{- end }}
      {{- else }}
        - name: storage
          emptyDir: { }
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
